◆フレームワーク
「AppFrame」
------------------------------
◆開発期間
2021年12月14日～2022年3月14日
------------------------------
◆開発環境
OS：Windows10
言語：C++17/20
Microsoft Visual Studio Community 2019
DXライブラリ
nlohmann json
Git
GitHub
------------------------------
◆開発体制
アミューズメントメディア総合学院
◆プログラマー学科
・鈴木希海（すずきのぞみ）
------------------------------
◆説明
専門学校で行われたチームでのゲーム制作で、プログラマーチームの開発効率を向上させることを目的として開発したフレームワークです。
------------------------------
◆機能説明

・ApplicationBase
アプリケーションの実体となる基底クラスです。
静的メンバとしてアプリケーションの実体をシェアードポインタで保持しており、ApplicationBaseを継承したクラスのコンストラクタで実体の登録を行います。

・appframe.h
本フレームワークを使用するために必要なファイルです。

・WinMain.cpp
アプリケーションのエントリーポイントです。
アプリケーションの実体の取得を行い、実体が登録が行われていてかつアプリケーションの初期化に成功した場合のみ、ゲームループに移行する設計となっています。

・ServerBase / ServerTemplateUnordered / ServerTemplateVector
プログラムで扱うデータを管理するためのテンプレートクラスです。
ServerBaseを継承して、STLの非順序連想配列でデータを管理するServerTemplateUnorderedとSTLの動的配列でデータを管理するServerTemplateVectorを実装しています。
使用用途に合ったテンプレートを継承したクラスを作成することでご使用いただけます。

・ModeServer / ModeBase
本プログラムの基幹となっている、モード(シーン)の制御を行うServerTemplateUnorderedの派生クラスです。
ModeBaseを継承したクラスを作成してModeServerに登録し、Modeを切り替えながらプログラムが実行されるようになっています。

・ResourceServer / DivGraph
プログラムで扱う画像データを管理するServerTemplateUnorderedの派生クラスです。
文字列をキーとして、画像識別番号と画像情報用のDivGraphクラスの管理を行います。

・SoundServer
プログラムで扱うサウンドデータを管理するServerTemplateUnorderedの派生クラスです。
文字列をキーとして、サウンド識別番号の読み取り・取得を行います。

・ModelServer / ModelData
プログラムで扱う3Dモデルデータを管理するServerTemplateUnorderedの派生クラスです。
文字列をキーとして、3Dモデルの識別番号とアニメーション情報を管理するModelDataクラスの読み取り・取得を行います。

・InputOperation / InputBase
入力デバイスと入力処理の管理を行うシステムクラスです。
入力デバイスの入力状態を保持・更新するデータの基底となるInputBaseを継承したクラスを管理し、入力処理の更新を行っています。
派生クラスとしてキーボード用のKeyboardStateクラス、DirectInput対応のJoypadStateクラス、XInput対応のXBoxStateクラス、マウス用のMouseStateクラスが用意されています。

・Color
RGBAカラーモデル情報クラスです。
RBG値を16進数に変換し、カラーコードへの変換を自前で実装しています。

・Arithmetic
算術系処理をまとめたクラスです。
進数変換や値が範囲内に収まっているかの判定などが実装されています。

・Circle / LineSegment / Plane
算術処理で用いるクラスです。
データを一括管理するためにクラス化をしています。

・Vector4
ベクトル計算で用いる、四次元ベクトルクラスです。
ベクトルの長さ、正規化、単位化、内積、外積を算出する処理を実装しています。

・Matrix44
行列計算で用いる、4*4行列クラスです。
行列計算もこちらで実装しています。

・Utility
算術処理用の補助機能をまとめた静的クラスです。
ワールド座標変換や、二つの値を比較しての最小値・最大値の取得、デグリー・ラジアンの変換処理などを実装しています。